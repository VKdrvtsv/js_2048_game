{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAc,SAAS,aAAa,CAAC,WACrC,EAAQ,EAAG,SAAS,aAAa,CAAC,eAAe,QAAQ,EACzD,EAAS,EAAG,SAAS,gBAAgB,CAAC,gBAEtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAc,SAAS,aAAa,CAAC,iBAErC,EAAe,SAAS,aAAa,CAAC,eACxC,EAAQ,EAEN,EAAgB,WACpB,IAAM,EAAa,EAAM,MAAM,CAAC,SAAA,CAAhC,EAAwC,MAAA,AAAqB,KAArB,EAAK,WAAW,A,GAClD,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAEhE,OAAO,CAAU,CAAC,EAAY,AAChC,EAYM,EAAkB,WACtB,IAAM,EARN,AAAI,AAAS,GAFE,KAAK,MAAM,GAGjB,EAGF,EAKD,EAAO,IAEb,EAAK,SAAS,CAAC,GAAG,CAAE,eAAqB,MAAA,CAAP,IAClC,EAAK,WAAW,CAAG,EAAO,QAAQ,EACpC,EAEM,EAAY,SAAC,CAAA,CAAG,CAAtB,EACE,GAAI,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,GAAK,CAAI,CAAC,EAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CACzE,MAAO,CAAA,CAEX,EAEM,EAAe,SAAC,CAAA,CAAG,CAAzB,EACE,GAAI,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,GAAK,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAI,EAAE,CAAC,WAAW,C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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable max-len */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar startButton = document.querySelector(\".button\");\nvar rows = _to_consumable_array(document.querySelector(\".game-tbody\").children);\nvar cells = _to_consumable_array(document.querySelectorAll(\".field-cell\"));\nvar startMessage = document.querySelector(\".message-start\");\nvar winMessage = document.querySelector(\".message-win\");\nvar loseMessage = document.querySelector(\".message-lose\");\nvar scoreElement = document.querySelector(\".game-score\");\nvar score = 0;\nvar getRandomCell = function() {\n    var emptyCells = cells.filter(function(cell) {\n        return cell.textContent === \"\";\n    });\n    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n    return emptyCells[randomIndex];\n};\nvar getRandomNumber = function() {\n    var number = Math.random();\n    if (number < 0.9) return 2;\n    return 4;\n};\nvar setRandomNumber = function() {\n    var number = getRandomNumber();\n    var cell = getRandomCell();\n    cell.classList.add(\"field-cell--\".concat(number));\n    cell.textContent = number.toString();\n};\nvar checkRows = function(i, c) {\n    if (rows[i].children[c].textContent === rows[i + 1].children[c].textContent) return true;\n};\nvar checkColomns = function(i, c) {\n    if (rows[i].children[c].textContent === rows[i].children[c + 1].textContent) return true;\n};\nvar canMove = function() {\n    for(var i = 0; i < rows.length; i++){\n        for(var c = 0; c < 4; c++)if (i === 3) {\n            if (c === 3) break;\n            if (checkColomns(i, c)) return true;\n        } else {\n            if (checkRows(i, c)) return true;\n            if (c === 3) break;\n            if (checkColomns(i, c)) return true;\n        }\n    }\n    if (cells.find(function(cell) {\n        return !cell.textContent;\n    })) return true;\n    return false;\n};\nvar updateData = function() {\n    scoreElement.textContent = score;\n    if (cells.find(function(cell) {\n        return cell.textContent === \"2048\";\n    })) winMessage.classList.remove(\"hidden\");\n    setRandomNumber();\n};\nfunction arrowDown() {\n    var currentCell;\n    var wasAdded = [];\n    var wasMoved = false;\n    for(var i = rows.length - 1; i >= 0; i--){\n        for(var c = 3; c >= 0; c--)if (rows[i].children[c].textContent !== \"\") {\n            currentCell = rows[i].children[c];\n            if (i === 3) break;\n            for(var m = i + 1; m < 4; m++){\n                if (rows[m].children[c].textContent === \"\") {\n                    rows[m].children[c].textContent = currentCell.textContent;\n                    rows[m].children[c].className = currentCell.className;\n                    currentCell = rows[m].children[c];\n                    rows[m - 1].children[c].textContent = \"\";\n                    rows[m - 1].children[c].className = \"field-cell\";\n                    wasMoved = true;\n                } else if (rows[m].children[c].textContent === rows[m - 1].children[c].textContent) {\n                    var newNumber = +currentCell.textContent * 2;\n                    if (wasAdded.includes(rows[m].children[c])) break;\n                    score += newNumber;\n                    rows[m].children[c].textContent = newNumber.toString();\n                    rows[m].children[c].className = \"field-cell field-cell--\".concat(newNumber);\n                    wasAdded.push(rows[m].children[c]);\n                    wasMoved = true;\n                    currentCell = rows[m].children[c];\n                    rows[m - 1].children[c].textContent = \"\";\n                    rows[m - 1].children[c].className = \"field-cell\";\n                    break;\n                }\n            }\n        }\n    }\n    if (wasMoved) updateData();\n}\nfunction arrowUp() {\n    var currentCell;\n    var wasAdded = [];\n    var wasMoved = false;\n    for(var i = 0; i < rows.length; i++){\n        for(var c = 0; c < 4; c++)if (rows[i].children[c].textContent !== \"\") {\n            currentCell = rows[i].children[c];\n            if (i === 0) break;\n            for(var m = i - 1; m >= 0; m--){\n                if (rows[m].children[c].textContent === \"\") {\n                    rows[m].children[c].textContent = currentCell.textContent;\n                    rows[m].children[c].className = currentCell.className;\n                    currentCell = rows[m].children[c];\n                    rows[m + 1].children[c].textContent = \"\";\n                    rows[m + 1].children[c].className = \"field-cell\";\n                    wasMoved = true;\n                } else if (rows[m].children[c].textContent === rows[m + 1].children[c].textContent) {\n                    var newNumber = +currentCell.textContent * 2;\n                    if (wasAdded.includes(rows[m].children[c])) break;\n                    score += newNumber;\n                    rows[m].children[c].textContent = newNumber.toString();\n                    rows[m].children[c].className = \"field-cell field-cell--\".concat(newNumber);\n                    wasAdded.push(rows[m].children[c]);\n                    wasMoved = true;\n                    currentCell = rows[m].children[c];\n                    rows[m + 1].children[c].textContent = \"\";\n                    rows[m + 1].children[c].className = \"field-cell\";\n                    break;\n                }\n            }\n        }\n    }\n    if (wasMoved) updateData();\n}\nfunction arrowLeft() {\n    var currentCell;\n    var wasAdded = [];\n    var wasMoved = false;\n    for(var c = 0; c < 4; c++){\n        for(var i = 0; i < rows.length; i++)if (rows[i].children[c].textContent !== \"\") {\n            currentCell = rows[i].children[c];\n            if (c === 0) break;\n            for(var m = c - 1; m >= 0; m--){\n                if (rows[i].children[m].textContent === \"\") {\n                    rows[i].children[m].textContent = currentCell.textContent;\n                    rows[i].children[m].className = currentCell.className;\n                    currentCell = rows[i].children[m];\n                    rows[i].children[m + 1].textContent = \"\";\n                    rows[i].children[m + 1].className = \"field-cell\";\n                    wasMoved = true;\n                } else if (rows[i].children[m].textContent === rows[i].children[m + 1].textContent) {\n                    var newNumber = +currentCell.textContent * 2;\n                    if (wasAdded.includes(rows[i].children[m])) break;\n                    score += newNumber;\n                    rows[i].children[m].textContent = newNumber.toString();\n                    rows[i].children[m].className = \"field-cell field-cell--\".concat(newNumber);\n                    wasAdded.push(rows[i].children[m]);\n                    wasMoved = true;\n                    currentCell = rows[i].children[m];\n                    rows[i].children[m + 1].textContent = \"\";\n                    rows[i].children[m + 1].className = \"field-cell\";\n                    break;\n                }\n            }\n        }\n    }\n    if (wasMoved) updateData();\n}\nfunction arrowRight() {\n    var currentCell;\n    var wasAdded = [];\n    var wasMoved = false;\n    for(var c = 3; c >= 0; c--){\n        for(var i = 0; i < rows.length; i++)if (rows[i].children[c].textContent !== \"\") {\n            currentCell = rows[i].children[c];\n            if (c === 3) break;\n            for(var m = c + 1; m < 4; m++){\n                if (rows[i].children[m].textContent === \"\") {\n                    rows[i].children[m].textContent = currentCell.textContent;\n                    rows[i].children[m].className = currentCell.className;\n                    currentCell = rows[i].children[m];\n                    rows[i].children[m - 1].textContent = \"\";\n                    rows[i].children[m - 1].className = \"field-cell\";\n                    wasMoved = true;\n                } else if (rows[i].children[m].textContent === rows[i].children[m - 1].textContent) {\n                    var newNumber = +currentCell.textContent * 2;\n                    if (wasAdded.includes(rows[i].children[m])) break;\n                    score += newNumber;\n                    rows[i].children[m].textContent = newNumber.toString();\n                    rows[i].children[m].className = \"field-cell field-cell--\".concat(newNumber);\n                    wasAdded.push(rows[i].children[m]);\n                    wasMoved = true;\n                    currentCell = rows[i].children[m];\n                    rows[i].children[m - 1].textContent = \"\";\n                    rows[i].children[m - 1].className = \"field-cell\";\n                    break;\n                }\n            }\n        }\n    }\n    if (wasMoved) updateData();\n}\ndocument.addEventListener(\"click\", function(e) {\n    var start = e.target.closest(\".start\");\n    var restart = e.target.closest(\".restart\");\n    if (start) {\n        startButton.classList.remove(\"start\");\n        startButton.classList.add(\"restart\");\n        startButton.textContent = \"Restart\";\n        setRandomNumber();\n        setRandomNumber();\n        startMessage.classList.add(\"hidden\");\n    }\n    if (restart) {\n        cells.forEach(function(cell) {\n            cell.className = \"field-cell\";\n            cell.textContent = \"\";\n        });\n        setRandomNumber();\n        setRandomNumber();\n        loseMessage.classList.add(\"hidden\");\n        winMessage.classList.add(\"hidden\");\n        score = 0;\n        scoreElement.textContent = score;\n    }\n});\nwindow.addEventListener(\"keydown\", function(e) {\n    if (startButton.classList.contains(\"start\")) return;\n    if (e.key === \"ArrowDown\") arrowDown();\n    if (e.key === \"ArrowUp\") arrowUp();\n    if (e.key === \"ArrowLeft\") arrowLeft();\n    if (e.key === \"ArrowRight\") arrowRight();\n    if (!canMove()) loseMessage.classList.remove(\"hidden\");\n});\n\n//# sourceMappingURL=index.ba44b8d1.js.map\n","/* eslint-disable max-len */\n'use strict';\n\nconst startButton = document.querySelector('.button');\nconst rows = [...document.querySelector('.game-tbody').children];\nconst cells = [...document.querySelectorAll('.field-cell')];\n\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nconst scoreElement = document.querySelector('.game-score');\nlet score = 0;\n\nconst getRandomCell = () => {\n  const emptyCells = cells.filter(cell => cell.textContent === '');\n  const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n  return emptyCells[randomIndex];\n};\n\nconst getRandomNumber = () => {\n  const number = Math.random();\n\n  if (number < 0.9) {\n    return 2;\n  }\n\n  return 4;\n};\n\nconst setRandomNumber = () => {\n  const number = getRandomNumber();\n  const cell = getRandomCell();\n\n  cell.classList.add(`field-cell--${number}`);\n  cell.textContent = number.toString();\n};\n\nconst checkRows = (i, c) => {\n  if (rows[i].children[c].textContent === rows[i + 1].children[c].textContent) {\n    return true;\n  }\n};\n\nconst checkColomns = (i, c) => {\n  if (rows[i].children[c].textContent === rows[i].children[c + 1].textContent) {\n    return true;\n  }\n};\n\nconst canMove = () => {\n  for (let i = 0; i < rows.length; i++) {\n    for (let c = 0; c < 4; c++) {\n      if (i === 3) {\n        if (c === 3) {\n          break;\n        }\n\n        if (checkColomns(i, c)) {\n          return true;\n        }\n      } else {\n        if (checkRows(i, c)) {\n          return true;\n        }\n\n        if (c === 3) {\n          break;\n        }\n\n        if (checkColomns(i, c)) {\n          return true;\n        }\n      }\n    }\n  }\n\n  if (cells.find(cell => !cell.textContent)) {\n    return true;\n  }\n\n  return false;\n};\n\nconst updateData = () => {\n  scoreElement.textContent = score;\n\n  if (cells.find(cell => cell.textContent === '2048')) {\n    winMessage.classList.remove('hidden');\n  }\n\n  setRandomNumber();\n};\n\nfunction arrowDown() {\n  let currentCell;\n  const wasAdded = [];\n  let wasMoved = false;\n\n  for (let i = rows.length - 1; i >= 0; i--) {\n    for (let c = 3; c >= 0; c--) {\n      if (rows[i].children[c].textContent !== '') {\n        currentCell = rows[i].children[c];\n\n        if (i === 3) {\n          break;\n        }\n\n        for (let m = i + 1; m < 4; m++) {\n          if (rows[m].children[c].textContent === '') {\n            rows[m].children[c].textContent = currentCell.textContent;\n            rows[m].children[c].className = currentCell.className;\n\n            currentCell = rows[m].children[c];\n\n            rows[m - 1].children[c].textContent = '';\n            rows[m - 1].children[c].className = 'field-cell';\n            wasMoved = true;\n          } else if (rows[m].children[c].textContent === rows[m - 1].children[c].textContent) {\n            const newNumber = +currentCell.textContent * 2;\n\n            if (wasAdded.includes(rows[m].children[c])) {\n              break;\n            }\n\n            score += newNumber;\n\n            rows[m].children[c].textContent = newNumber.toString();\n            rows[m].children[c].className = `field-cell field-cell--${newNumber}`;\n            wasAdded.push(rows[m].children[c]);\n            wasMoved = true;\n\n            currentCell = rows[m].children[c];\n\n            rows[m - 1].children[c].textContent = '';\n            rows[m - 1].children[c].className = 'field-cell';\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (wasMoved) {\n    updateData();\n  }\n}\n\nfunction arrowUp() {\n  let currentCell;\n  const wasAdded = [];\n  let wasMoved = false;\n\n  for (let i = 0; i < rows.length; i++) {\n    for (let c = 0; c < 4; c++) {\n      if (rows[i].children[c].textContent !== '') {\n        currentCell = rows[i].children[c];\n\n        if (i === 0) {\n          break;\n        }\n\n        for (let m = i - 1; m >= 0; m--) {\n          if (rows[m].children[c].textContent === '') {\n            rows[m].children[c].textContent = currentCell.textContent;\n            rows[m].children[c].className = currentCell.className;\n\n            currentCell = rows[m].children[c];\n\n            rows[m + 1].children[c].textContent = '';\n            rows[m + 1].children[c].className = 'field-cell';\n\n            wasMoved = true;\n          } else if (rows[m].children[c].textContent === rows[m + 1].children[c].textContent) {\n            const newNumber = +currentCell.textContent * 2;\n\n            if (wasAdded.includes(rows[m].children[c])) {\n              break;\n            }\n\n            score += newNumber;\n\n            rows[m].children[c].textContent = newNumber.toString();\n            rows[m].children[c].className = `field-cell field-cell--${newNumber}`;\n\n            wasAdded.push(rows[m].children[c]);\n            wasMoved = true;\n\n            currentCell = rows[m].children[c];\n\n            rows[m + 1].children[c].textContent = '';\n            rows[m + 1].children[c].className = 'field-cell';\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (wasMoved) {\n    updateData();\n  }\n}\n\nfunction arrowLeft() {\n  let currentCell;\n  const wasAdded = [];\n  let wasMoved = false;\n\n  for (let c = 0; c < 4; c++) {\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].children[c].textContent !== '') {\n        currentCell = rows[i].children[c];\n\n        if (c === 0) {\n          break;\n        }\n\n        for (let m = c - 1; m >= 0; m--) {\n          if (rows[i].children[m].textContent === '') {\n            rows[i].children[m].textContent = currentCell.textContent;\n            rows[i].children[m].className = currentCell.className;\n\n            currentCell = rows[i].children[m];\n\n            rows[i].children[m + 1].textContent = '';\n            rows[i].children[m + 1].className = 'field-cell';\n            wasMoved = true;\n          } else if (rows[i].children[m].textContent === rows[i].children[m + 1].textContent) {\n            const newNumber = +currentCell.textContent * 2;\n\n            if (wasAdded.includes(rows[i].children[m])) {\n              break;\n            }\n\n            score += newNumber;\n\n            rows[i].children[m].textContent = newNumber.toString();\n            rows[i].children[m].className = `field-cell field-cell--${newNumber}`;\n\n            wasAdded.push(rows[i].children[m]);\n            wasMoved = true;\n\n            currentCell = rows[i].children[m];\n\n            rows[i].children[m + 1].textContent = '';\n            rows[i].children[m + 1].className = 'field-cell';\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (wasMoved) {\n    updateData();\n  }\n}\n\nfunction arrowRight() {\n  let currentCell;\n  const wasAdded = [];\n  let wasMoved = false;\n\n  for (let c = 3; c >= 0; c--) {\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].children[c].textContent !== '') {\n        currentCell = rows[i].children[c];\n\n        if (c === 3) {\n          break;\n        }\n\n        for (let m = c + 1; m < 4; m++) {\n          if (rows[i].children[m].textContent === '') {\n            rows[i].children[m].textContent = currentCell.textContent;\n            rows[i].children[m].className = currentCell.className;\n\n            currentCell = rows[i].children[m];\n\n            rows[i].children[m - 1].textContent = '';\n            rows[i].children[m - 1].className = 'field-cell';\n            wasMoved = true;\n          } else if (rows[i].children[m].textContent === rows[i].children[m - 1].textContent) {\n            const newNumber = +currentCell.textContent * 2;\n\n            if (wasAdded.includes(rows[i].children[m])) {\n              break;\n            }\n\n            score += newNumber;\n\n            rows[i].children[m].textContent = newNumber.toString();\n            rows[i].children[m].className = `field-cell field-cell--${newNumber}`;\n\n            wasAdded.push(rows[i].children[m]);\n            wasMoved = true;\n\n            currentCell = rows[i].children[m];\n\n            rows[i].children[m - 1].textContent = '';\n            rows[i].children[m - 1].className = 'field-cell';\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (wasMoved) {\n    updateData();\n  }\n}\n\ndocument.addEventListener('click', (e) => {\n  const start = e.target.closest('.start');\n  const restart = e.target.closest('.restart');\n\n  if (start) {\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = ('Restart');\n\n    setRandomNumber();\n    setRandomNumber();\n\n    startMessage.classList.add('hidden');\n  }\n\n  if (restart) {\n    cells.forEach(cell => {\n      cell.className = 'field-cell';\n      cell.textContent = '';\n    });\n\n    setRandomNumber();\n    setRandomNumber();\n\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n\n    score = 0;\n    scoreElement.textContent = score;\n  }\n});\n\nwindow.addEventListener('keydown', (e) => {\n  if (startButton.classList.contains('start')) {\n    return;\n  }\n\n  if (e.key === 'ArrowDown') {\n    arrowDown();\n  };\n\n  if (e.key === 'ArrowUp') {\n    arrowUp();\n  };\n\n  if (e.key === 'ArrowLeft') {\n    arrowLeft();\n  };\n\n  if (e.key === 'ArrowRight') {\n    arrowRight();\n  };\n\n  if (!canMove()) {\n    loseMessage.classList.remove('hidden');\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","startButton","document","querySelector","rows","children","cells","querySelectorAll","startMessage","winMessage","loseMessage","scoreElement","score","getRandomCell","emptyCells","filter","cell","textContent","randomIndex","Math","floor","random","setRandomNumber","number","classList","add","concat","checkRows","c","checkColomns","canMove","find","updateData","remove","addEventListener","e","start","target","closest","restart","forEach","className","window","contains","key","arrowDown","currentCell","wasAdded","wasMoved","m","newNumber","includes","push","arrowUp","arrowLeft","arrowRight"],"version":3,"file":"index.ba44b8d1.js.map"}